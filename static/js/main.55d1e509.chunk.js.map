{"version":3,"sources":["components/OpenFile.js","components/Player.js","App.js","reportWebVitals.js","index.js"],"names":["LoadFile","state","mode","example","examples","file","a","this","fetch","then","response","blob","data","console","log","setState","loadFile","json","reader","FileReader","onloadend","e","text","target","result","sheet","parseSheet","props","onChangeFile","fileInput","type","value","err","error","readAsText","loadExample","setMode","loadExamples","lines","split","notes","line","trim","startsWith","bpm","first","more","pitch","octave","tempo","level","parseInt","aux","map","s","off","offset","parseFloat","undefined","push","length","reduce","sum","note","inputElement","loadIcon","loadEnabled","ref","className","name","onChange","files","options","aria-label","onModeChange","id","defaultChecked","htmlFor","disabled","onClick","onLoadFile","Component","Player","gain","noteIndex","waveType","audioContext","window","AudioContext","webkitAudioContext","auxOscillators","gainNode","createGain","setGain","prevProps","oscillator","stop","playNextNote","n","toFrequency","toDuration","playNote","frequency","duration","callback","audioCtx","createOscillator","connect","destination","onended","forEach","o","start","currentTime","progress","relativeLevel","Math","pow","setProgress","min","max","step","playMelody","toFixed","setWaveType","defaultValue","App","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAEqBA,E,4MACnBC,MAAQ,CACNC,KAAM,OACNC,QAAS,KACTC,SAAU,CAAC,eACXC,KAAM,M,wFAGR,mCAAAC,EAAA,6DACQH,EAAUI,KAAKN,MAAME,QAD7B,SAEQK,MAAM,cAAgBL,GACzBM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEV,KAAMO,IACtB,EAAKI,cAPX,gD,uHAWA,iCAAAV,EAAA,sEACQE,MAAM,yBACTC,MAAK,SAACC,GAAD,OAAcA,EAASO,UAC5BR,MAAK,SAACG,GAAD,OAAU,EAAKG,SAAS,CAAEZ,QAASS,EAAK,GAAIR,SAAUQ,OAHhE,2C,4EAMA,WAAY,IAAD,OACHM,EAAS,IAAIC,WACnBD,EAAOE,UAAP,uCAAmB,WAAOC,GAAP,iBAAAf,EAAA,sDACXgB,EAAOD,EAAEE,OAAOC,OACtB,IACQC,EAAQ,EAAKC,WAAWJ,GAC9B,EAAKK,MAAMC,aAAaH,GACxBZ,QAAQC,IAAI,gBAAiBW,GACD,SAAxB,EAAKI,UAAUC,OAAiB,EAAKD,UAAUE,MAAQ,IAC3D,EAAKhB,SAAS,CAAEV,KAAM,OACtB,MAAO2B,GACPnB,QAAQoB,MAAMD,GATC,2CAAnB,sDAYAd,EAAOgB,WAAW3B,KAAKN,MAAMI,KAAM,W,wBAGrC,WAC0B,SAApBE,KAAKN,MAAMC,KACbK,KAAKS,WACwB,YAApBT,KAAKN,MAAMC,MACpBK,KAAK4B,gB,0BAIT,SAAad,GACXd,KAAK6B,QAAQf,EAAEE,OAAOQ,S,qBAGxB,SAAQ7B,GACO,YAATA,GAAuBK,KAAKJ,SAC9BI,KAAK8B,eAEP9B,KAAKQ,SAAS,CAAEb,KAAMA,M,wBAGxB,SAAWoB,GACT,IADe,EACTgB,EAAQhB,EAAKiB,MAAM,MACnBd,EAAQ,CAAEe,MAAO,IAFR,cAGEF,GAHF,IAGf,2BAAwB,CAAC,IAAhBG,EAAe,QAEtB,GAAa,MADbA,EAAOA,EAAKC,UACOD,EAAKE,WAAW,KAGnC,GAAKlB,EAAMmB,IAAX,CALsB,MAYGH,EAAKF,MAAM,WAZd,iBAYfM,EAZe,KAYLC,EAZK,aAaSD,EAAMN,MAAM,OAbrB,mBAafQ,EAbe,KAaRC,EAbQ,KAaAC,EAbA,KAchBC,EAAQC,SAASJ,GAA4B,GAAnBI,SAASH,GAAe,GAClDI,EAAMN,EAAKO,KAAI,SAACC,GAAO,IAAD,EACUA,EAAEf,MAAM,OADlB,mBACnBQ,EADmB,KACZC,EADY,KACJC,EADI,KACGM,EADH,KAEpBL,EAAQC,SAASJ,GAA4B,GAAnBI,SAASH,GAAe,GAClDQ,EAASD,EAAME,WAAWF,QAAOG,EACvC,MAAO,CAAER,MAAOA,EAAOD,MAAOQ,WAAWR,GAAQO,OAAQA,MAE3D/B,EAAMe,MAAMmB,KAAK,CAAET,MAAOA,EAAOD,MAAOQ,WAAWR,GAAQG,IAAKA,QAhBhE,CAAgB,MAEkBX,EAAKF,MAAM,OAF7B,iBAEPK,EAFO,KAEFY,EAFE,gBAGd/B,EAAMmB,IAAMa,WAAWb,GACvBnB,EAAM+B,OAASC,WAAWD,KAZf,8BA4Bf,OAFA/B,EAAMmC,OAASnC,EAAMe,MAAMqB,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKd,QAAO,GACnEpC,QAAQC,IAAIW,EAAMmC,QACXnC,I,oBAGT,WAAU,IAAD,OACHuC,EAAe,KACjBC,EAAW,KACXC,GAAc,EAChB,GAAwB,SAApB3D,KAAKN,MAAMC,KACb+D,EAAW,cACXD,EACE,uBACEG,IAAK,SAACA,GAAD,OAAU,EAAKtC,UAAYsC,GAChCrC,KAAK,OACLsC,UAAU,eACVC,KAAK,OACLC,SAAU,SAACjD,GAAD,OAAO,EAAKN,SAAS,CAAEV,KAAMgB,EAAEE,OAAOgD,MAAM,QAG1DL,IAAgB3D,KAAKN,MAAMI,UACtB,GAAwB,YAApBE,KAAKN,MAAMC,KAAoB,CACxC+D,EAAW,WACX,IAAMO,EAAUjE,KAAKN,MAAMG,SAASiD,KAAI,SAACgB,GAAD,OACtC,wBAAmBtC,MAAOsC,EAA1B,SACGA,GADUA,MAIfL,EACE,wBACEG,IAAK,SAACA,GAAD,OAAU,EAAKtC,UAAYsC,GAChCC,UAAU,cACVK,aAAW,oBACXH,SAAU,SAACjD,GAAD,OAAO,EAAKN,SAAS,CAAEZ,QAASkB,EAAEE,OAAOQ,SAJrD,SAMGyC,IAGLN,GAAc,EAEhB,OACE,qBAAKE,UAAU,WAAf,SACE,sBAAKA,UAAU,6CAAf,UACE,sBAAKA,UAAU,WAAWE,SAAU,SAACjD,GAAD,OAAO,EAAKqD,aAAarD,IAA7D,UACE,uBAAM+C,UAAU,+BAAhB,UACE,uBACEA,UAAU,mBACVtC,KAAK,QACLuC,KAAK,aACLM,GAAG,iBACH5C,MAAM,OACN6C,gBAAc,IAEhB,uBAAOR,UAAU,mBAAmBS,QAAQ,iBAA5C,2BAIF,uBAAMT,UAAU,+BAAhB,UACE,uBACEA,UAAU,mBACVtC,KAAK,QACLuC,KAAK,aACLM,GAAG,oBACH5C,MAAM,YAER,uBAAOqC,UAAU,mBAAmBS,QAAQ,oBAA5C,4BAKJ,sBAAMT,UAAU,cAAhB,SAA+BJ,IAC/B,yBAAQI,UAAU,uBAAuBU,UAAWZ,EAAaa,QAAS,kBAAM,EAAKC,cAArF,UACE,mBAAGZ,UAAW,gBAAkBH,IADlC,oB,GA9J4BgB,aCAjBC,E,kDACnB,WAAYvD,GAAQ,IAAD,6BACjB,cAAMA,IAED1B,MAAQ,CACXkF,KAAM,GACNC,WAAY,EACZ3D,MAAO,EAAKE,MAAMF,OAJC,CAAEmB,IAAK,IAAKY,OAAQ,EAAGhB,MAAO,IAKjD6C,SAAU,QAEZ,EAAKC,aAAe,IAAKC,OAAOC,cAAgBD,OAAOE,oBACvD,EAAKC,eAAiB,GACtB,EAAKC,SAAW,EAAKL,aAAaM,aAClC,EAAKC,QAAQ,EAAK5F,MAAMkF,MAZP,E,sDAenB,SAAmBW,GACbA,EAAUrE,QAAUlB,KAAKoB,MAAMF,OACjClB,KAAKQ,SAAS,CAAEU,MAAOlB,KAAKoB,MAAMF,U,wBAItC,WACMlB,KAAKwF,YACPxF,KAAKyF,OAGFzF,KAAKoB,MAAMF,QAIhBlB,KAAKQ,SAAS,CAAEqE,WAAY,IAC5B7E,KAAK0F,kB,0BAGP,WAAgB,IAAD,OACPb,EAAY7E,KAAKN,MAAMmF,UAAY,EACnC3D,EAAQlB,KAAKN,MAAMwB,MAEzB,GADAlB,KAAKQ,SAAS,CAAEqE,UAAWA,IACvBA,GAAa3D,EAAMe,MAAMoB,OAC3BrD,KAAKyF,WACA,CACL,IAAMjC,EAAOtC,EAAMe,MAAM4C,GACnBhC,EAAMW,EAAKX,IAAIC,KAAI,SAAC6C,GAAD,MAAO,CAAC,EAAKC,YAAYD,EAAEhD,OAAQ,EAAKkD,WAAWF,EAAEjD,OAAQ,EAAKmD,WAAWF,EAAE1C,YACxGjD,KAAK8F,SAAS9F,KAAK4F,YAAYpC,EAAKb,OAAQ3C,KAAK6F,WAAWrC,EAAKd,QAAQ,kBAAM,EAAKgD,iBAAgB7C,GAAO,O,sBAI/G,SAASkD,EAAWC,EAAUC,EAAUpD,GAAM,IAAD,OACrCqD,EAAWlG,KAAK+E,aAChBS,EAAaU,EAASC,mBAO5B,GANAnG,KAAKwF,WAAaA,EAElBA,EAAWjE,KAAOvB,KAAKN,MAAMoF,SAC7BU,EAAWO,UAAUvE,MAAQuE,EAC7BP,EAAWY,QAAQpG,KAAKoF,UAAUgB,QAAQF,EAASG,aACnDb,EAAWc,QAAUL,EACrB,OAAIpD,QAAJ,IAAIA,OAAJ,EAAIA,EAAKQ,OAAQ,CACf,IAAM8B,EAAiB,GACvBtC,EAAI0D,SAAQ,YAAoC,IAAD,mBAAjCR,EAAiC,KAAtBC,EAAsB,KAAZ/C,EAAY,KACvCuD,EAAIN,EAASC,mBACnBK,EAAEjF,KAAO,EAAK7B,MAAMoF,SACpB0B,EAAET,UAAUvE,MAAQuE,EACpBS,EAAEJ,QAAQ,EAAKhB,UAAUgB,QAAQF,EAASG,aAC1CG,EAAER,SAAWA,EACbQ,EAAEvD,OAASA,EACXkC,EAAe/B,KAAKoD,MAEtBrB,EAAeoB,SAAQ,SAACC,GAClBA,EAAEvD,QACJuD,EAAEC,MAAMP,EAASQ,YAAcF,EAAEvD,QACjCuD,EAAEf,KAAKS,EAASQ,YAAcF,EAAEvD,OAASuD,EAAER,YAE3CQ,EAAEC,QACFD,EAAEf,KAAKS,EAASQ,YAAcF,EAAER,cAItCR,EAAWiB,QACXjB,EAAWC,KAAKS,EAASQ,YAAcV,K,qBAGzC,SAAQpB,GACN5E,KAAKQ,SAAS,CAAEoE,KAAMA,IACtB5E,KAAKoF,SAASR,KAAKpD,MAAQoD,I,yBAG7B,SAAY+B,GACV3G,KAAKQ,SAAS,CAAEqE,UAAW8B,EAAW,IAClC3G,KAAKwF,YACPxF,KAAKwF,WAAWC,S,yBAIpB,SAAYX,GACV9E,KAAKQ,SAAS,CAAEsE,SAAUA,IACtB9E,KAAKwF,aACPxF,KAAKwF,WAAWjE,KAAOuD,K,kBAI3B,WACO9E,KAAKwF,aAGVxF,KAAKwF,WAAWc,QAAU,KAC1BtG,KAAKwF,WAAWC,OAChBzF,KAAKwF,WAAa,KAClBxF,KAAKQ,SAAS,CAAEqE,WAAY,O,yBAG9B,SAAYlC,GACV,GAAc,IAAVA,EACF,OAAO,EAGT,IAEMiE,GAHNjE,GAAS3C,KAAKN,MAAMwB,MAAM+B,QAEJ,GAGtB,OAJ2B,IAGT4D,KAAKC,IAAI,EAAGF,EAAgB,M,wBAIhD,SAAWlE,GACT,OAAKA,EACW,GAARA,GAAsC,GAAvB1C,KAAKN,MAAMwB,MAAMmB,KADrB,I,oBAIrB,WAAU,IAAD,OACP,OACE,sBAAKwB,UAAU,mBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,MAAf,SACE,uBACEtC,KAAK,QACLsC,UAAU,aACVC,KAAK,cACLtC,MAAO,EAAIxB,KAAKN,MAAMmF,UACtBd,SAAU,SAACjD,GAAD,OAAO,EAAKiG,YAAYjG,EAAEE,OAAOQ,QAC3CwF,IAAK,EACLC,IAAKjH,KAAKN,MAAMwB,MAAMe,MAAMoB,OAC5B6D,KAAM,MAGV,qBAAKrD,UAAU,WAAf,SACE,uBAAOS,QAAQ,cAAcT,UAAU,aAAvC,SACG,WAAa7D,KAAKN,MAAMmF,UAAY,GAAK,MAAQ7E,KAAKN,MAAMwB,MAAMe,MAAMoB,cAI/E,sBAAKQ,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,uBAAOA,UAAU,qBAAjB,qBACA,yBAAQA,UAAU,kBAAkBW,QAAS,kBAAM,EAAK2C,cAAxD,UACE,mBAAGtD,UAAU,gBADf,WAGA,yBAAQA,UAAU,sBAAsBW,QAAS,kBAAM,EAAKiB,QAA5D,UACE,mBAAG5B,UAAU,gBADf,cAIF,sBAAKA,UAAU,MAAf,UACE,uBAAOS,QAAQ,SAAST,UAAU,aAAlC,SACG,WAAaX,WAAWlD,KAAKN,MAAMkF,MAAMwC,QAAQ,KAEpD,uBACE7F,KAAK,QACLsC,UAAU,aACVC,KAAK,SACLC,SAAU,SAACjD,GACT,EAAKwE,QAAQxE,EAAEE,OAAOQ,QAExBA,MAAOxB,KAAKN,MAAMkF,KAClBoC,IAAK,EACLC,IAAK,EACLC,KAAM,SAGV,sBAAKrD,UAAU,WAAf,UACE,uBAAOS,QAAQ,WAAWT,UAAU,aAApC,kBAGA,yBAAQA,UAAU,cAAcE,SAAU,SAACjD,GAAD,OAAO,EAAKuG,YAAYvG,EAAEE,OAAOQ,QAAQ8F,aAAa,OAAhG,UACE,wBAAQ9F,MAAM,OAAd,4BACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sC,GAzLsBkD,aCGf6C,E,4MACnB7H,MAAQ,CACNwB,MAAO,CAAEe,MAAO,K,kDAGlB,SAAaf,GACXlB,KAAKQ,SAAS,CAAEU,MAAOA,M,oBAGzB,WACE,OACE,qBAAK2C,UAAU,gBAAf,SACE,sBAAMA,UAAU,YAAhB,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAUxC,aAAcrB,KAAKqB,aAAamG,KAAKxH,QAC/C,cAAC,EAAD,CAAQkB,MAAOlB,KAAKN,MAAMwB,mB,GAfLwD,aCOlB+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzH,MAAK,YAAkD,IAA/C0H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.55d1e509.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nexport default class LoadFile extends Component {\n  state = {\n    mode: \"file\",\n    example: null,\n    examples: [\"Loading ...\"],\n    file: null,\n  };\n\n  async loadExample() {\n    const example = this.state.example;\n    await fetch(\"./examples/\" + example)\n      .then((response) => response.blob())\n      .then((data) => {\n        console.log(data);\n        this.setState({ file: data });\n        this.loadFile();\n      });\n  }\n\n  async loadExamples() {\n    await fetch(\"./examples/index.json\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ example: data[0], examples: data }));\n  }\n\n  loadFile() {\n    const reader = new FileReader();\n    reader.onloadend = async (e) => {\n      const text = e.target.result;\n      try {\n        const sheet = this.parseSheet(text);\n        this.props.onChangeFile(sheet);\n        console.log(\"Loaded sheet:\", sheet);\n        if (this.fileInput.type === \"file\") this.fileInput.value = \"\";\n        this.setState({ file: null });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    reader.readAsText(this.state.file, \"utf-8\");\n  }\n\n  onLoadFile() {\n    if (this.state.mode === \"file\") {\n      this.loadFile();\n    } else if (this.state.mode === \"example\") {\n      this.loadExample();\n    }\n  }\n\n  onModeChange(e) {\n    this.setMode(e.target.value);\n  }\n\n  setMode(mode) {\n    if (mode === \"example\" && !this.example) {\n      this.loadExamples();\n    }\n    this.setState({ mode: mode });\n  }\n\n  parseSheet(text) {\n    const lines = text.split(\"\\n\");\n    const sheet = { notes: [] };\n    for (let line of lines) {\n      line = line.trim();\n      if (line === \"\" || line.startsWith(\"#\")) {\n        continue;\n      }\n      if (!sheet.bpm) {\n        // eslint-disable-next-line\n        const [bpm, offset, ...other] = line.split(/\\s+/);\n        sheet.bpm = parseFloat(bpm);\n        sheet.offset = parseFloat(offset);\n        continue;\n      }\n      const [first, ...more] = line.split(/\\s+;\\s+/);\n      const [pitch, octave, tempo] = first.split(/\\s+/);\n      const level = parseInt(pitch) + parseInt(octave) * 12 + 12;\n      const aux = more.map((s) => {\n        const [pitch, octave, tempo, off] = s.split(/\\s+/);\n        const level = parseInt(pitch) + parseInt(octave) * 12 + 12;\n        const offset = off ? parseFloat(off) : undefined;\n        return { level: level, tempo: parseFloat(tempo), offset: offset };\n      });\n      sheet.notes.push({ level: level, tempo: parseFloat(tempo), aux: aux });\n    }\n    sheet.length = sheet.notes.reduce((sum, note) => sum + note.tempo, 0);\n    console.log(sheet.length);\n    return sheet;\n  }\n\n  render() {\n    let inputElement = null,\n      loadIcon = null,\n      loadEnabled = true;\n    if (this.state.mode === \"file\") {\n      loadIcon = \"folder-open\";\n      inputElement = (\n        <input\n          ref={(ref) => (this.fileInput = ref)}\n          type=\"file\"\n          className=\"form-control\"\n          name=\"file\"\n          onChange={(e) => this.setState({ file: e.target.files[0] })}\n        />\n      );\n      loadEnabled = !!this.state.file;\n    } else if (this.state.mode === \"example\") {\n      loadIcon = \"download\";\n      const options = this.state.examples.map((name) => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ));\n      inputElement = (\n        <select\n          ref={(ref) => (this.fileInput = ref)}\n          className=\"form-select\"\n          aria-label=\"Select an example\"\n          onChange={(e) => this.setState({ example: e.target.value })}\n        >\n          {options}\n        </select>\n      );\n      loadEnabled = true;\n    }\n    return (\n      <div className=\"LoadFile\">\n        <div className=\"container mb-3 d-flex align-items-baseline\">\n          <div className=\"col-auto\" onChange={(e) => this.onModeChange(e)}>\n            <span className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"loadSource\"\n                id=\"loadSourceFile\"\n                value=\"file\"\n                defaultChecked\n              />\n              <label className=\"form-check-label\" htmlFor=\"loadSourceFile\">\n                Local File\n              </label>\n            </span>\n            <span className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"loadSource\"\n                id=\"loadSourceExample\"\n                value=\"example\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"loadSourceExample\">\n                Examples\n              </label>\n            </span>\n          </div>\n          <span className=\"flex-grow-1\">{inputElement}</span>\n          <button className=\"btn btn-primary ms-2\" disabled={!loadEnabled} onClick={() => this.onLoadFile()}>\n            <i className={\"fas fa-fw fa-\" + loadIcon}></i> Load\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    const defaultSheet = { bpm: 120, offset: 0, notes: [] };\n    this.state = {\n      gain: 0.3,\n      noteIndex: -1,\n      sheet: this.props.sheet || defaultSheet,\n      waveType: \"sine\",\n    };\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.auxOscillators = [];\n    this.gainNode = this.audioContext.createGain();\n    this.setGain(this.state.gain);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sheet !== this.props.sheet) {\n      this.setState({ sheet: this.props.sheet });\n    }\n  }\n\n  playMelody() {\n    if (this.oscillator) {\n      this.stop();\n    }\n\n    if (!this.props.sheet) {\n      return;\n    }\n\n    this.setState({ noteIndex: -1 });\n    this.playNextNote();\n  }\n\n  playNextNote() {\n    const noteIndex = this.state.noteIndex + 1;\n    const sheet = this.state.sheet;\n    this.setState({ noteIndex: noteIndex });\n    if (noteIndex >= sheet.notes.length) {\n      this.stop();\n    } else {\n      const note = sheet.notes[noteIndex];\n      const aux = note.aux.map((n) => [this.toFrequency(n.level), this.toDuration(n.tempo), this.toDuration(n.offset)]);\n      this.playNote(this.toFrequency(note.level), this.toDuration(note.tempo), () => this.playNextNote(), aux || []);\n    }\n  }\n\n  playNote(frequency, duration, callback, aux) {\n    const audioCtx = this.audioContext;\n    const oscillator = audioCtx.createOscillator();\n    this.oscillator = oscillator;\n\n    oscillator.type = this.state.waveType;\n    oscillator.frequency.value = frequency;\n    oscillator.connect(this.gainNode).connect(audioCtx.destination);\n    oscillator.onended = callback;\n    if (aux?.length) {\n      const auxOscillators = [];\n      aux.forEach(([frequency, duration, offset]) => {\n        const o = audioCtx.createOscillator();\n        o.type = this.state.waveType;\n        o.frequency.value = frequency;\n        o.connect(this.gainNode).connect(audioCtx.destination);\n        o.duration = duration;\n        o.offset = offset;\n        auxOscillators.push(o);\n      });\n      auxOscillators.forEach((o) => {\n        if (o.offset) {\n          o.start(audioCtx.currentTime + o.offset);\n          o.stop(audioCtx.currentTime + o.offset + o.duration);\n        } else {\n          o.start();\n          o.stop(audioCtx.currentTime + o.duration);\n        }\n      });\n    }\n    oscillator.start();\n    oscillator.stop(audioCtx.currentTime + duration);\n  }\n\n  setGain(gain) {\n    this.setState({ gain: gain });\n    this.gainNode.gain.value = gain;\n  }\n\n  setProgress(progress) {\n    this.setState({ noteIndex: progress - 1 });\n    if (this.oscillator) {\n      this.oscillator.stop();\n    }\n  }\n\n  setWaveType(waveType) {\n    this.setState({ waveType: waveType });\n    if (this.oscillator) {\n      this.oscillator.type = waveType;\n    }\n  }\n\n  stop() {\n    if (!this.oscillator) {\n      return;\n    }\n    this.oscillator.onended = null;\n    this.oscillator.stop();\n    this.oscillator = null;\n    this.setState({ noteIndex: -1 });\n  }\n\n  toFrequency(level) {\n    if (level === 0) {\n      return 0;\n    }\n    level += this.state.sheet.offset;\n    const referenceFrequency = 440; // A4\n    const referenceNote = 69; // A4 = 9 + (4 + 1) * 12\n    const relativeLevel = level - referenceNote;\n    const frequency = Math.pow(2, relativeLevel / 12) * referenceFrequency;\n    return frequency;\n  }\n\n  toDuration(tempo) {\n    if (!tempo) return 0;\n    return (tempo * 60) / (this.state.sheet.bpm * 16);\n  }\n\n  render() {\n    return (\n      <div className=\"Player container\">\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <input\n              type=\"range\"\n              className=\"form-range\"\n              name=\"progressBar\"\n              value={1 + this.state.noteIndex}\n              onChange={(e) => this.setProgress(e.target.value)}\n              min={0}\n              max={this.state.sheet.notes.length}\n              step={1}\n            />\n          </div>\n          <div className=\"col-auto\">\n            <label htmlFor=\"progressBar\" className=\"form-label\">\n              {\"Notes: \" + (this.state.noteIndex + 1) + \" / \" + this.state.sheet.notes.length}\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-auto\">\n            <label className=\"form-label d-block\">Control</label>\n            <button className=\"btn btn-primary\" onClick={() => this.playMelody()}>\n              <i className=\"fas fa-play\"></i> Play\n            </button>\n            <button className=\"btn btn-danger ms-2\" onClick={() => this.stop()}>\n              <i className=\"fas fa-stop\"></i> Stop\n            </button>\n          </div>\n          <div className=\"col\">\n            <label htmlFor=\"volume\" className=\"form-label\">\n              {\"Volume: \" + parseFloat(this.state.gain).toFixed(2)}\n            </label>\n            <input\n              type=\"range\"\n              className=\"form-range\"\n              name=\"volume\"\n              onChange={(e) => {\n                this.setGain(e.target.value);\n              }}\n              value={this.state.gain}\n              min={0}\n              max={1}\n              step={0.01}\n            />\n          </div>\n          <div className=\"col-auto\">\n            <label htmlFor=\"waveType\" className=\"form-label\">\n              Type\n            </label>\n            <select className=\"form-select\" onChange={(e) => this.setWaveType(e.target.value)} defaultValue=\"sine\">\n              <option value=\"sine\">Sine (Default)</option>\n              <option value=\"square\">Square</option>\n              <option value=\"sawtooth\">Sawtooth</option>\n              <option value=\"triangle\">Triangle</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport \"./App.scss\";\nimport OpenFile from \"./components/OpenFile\";\nimport Player from \"./components/Player\";\n\nexport default class App extends Component {\n  state = {\n    sheet: { notes: [] },\n  };\n\n  onChangeFile(sheet) {\n    this.setState({ sheet: sheet });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <main className=\"card mb-3\">\n          <div className=\"card-body\">\n            <OpenFile onChangeFile={this.onChangeFile.bind(this)} />\n            <Player sheet={this.state.sheet} />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}