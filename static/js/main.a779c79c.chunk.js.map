{"version":3,"sources":["components/OpenFile.js","components/Player.js","App.js","reportWebVitals.js","index.js"],"names":["LoadFile","state","mode","example","examples","file","a","this","fetch","then","response","blob","data","setState","loadFile","json","filter","s","endsWith","reader","FileReader","onloadend","e","text","target","result","sheet","parseSheet","props","onChangeFile","console","log","fileInput","type","value","err","error","readAsText","loadExample","setMode","loadExamples","lines","split","notes","line","trim","startsWith","bpm","offset","parseFloat","first","more","pitch","octave","tempoM","level","parseInt","aux","map","tempoA","off","undefined","tempo","push","length","reduce","sum","note","inputElement","loadIcon","loadEnabled","ref","className","name","onChange","files","options","aria-label","onModeChange","id","defaultChecked","htmlFor","disabled","onClick","onLoadFile","Component","Player","gain","noteIndex","waveType","audioContext","window","AudioContext","webkitAudioContext","auxOscillators","gainNode","createGain","setGain","prevProps","stop","oscillator","playNextNote","n","toFrequency","toDuration","playNote","frequency","duration","callback","audioCtx","createOscillator","connect","destination","onended","forEach","o","start","currentTime","progress","relativeLevel","Math","pow","setProgress","min","max","step","playMelody","setWaveType","defaultValue","toFixed","App","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a779c79c.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nexport default class LoadFile extends Component {\n  state = {\n    mode: \"file\",\n    example: null,\n    examples: [\"Loading ...\"],\n    file: null,\n  };\n\n  async loadExample() {\n    const example = this.state.example;\n    await fetch(\"./examples/\" + example)\n      .then((response) => response.blob())\n      .then((data) => {\n        this.setState({ file: data });\n        this.loadFile();\n      });\n  }\n\n  async loadExamples() {\n    await fetch(\"./examples/index.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        data = data.filter((s) => !s.endsWith(\".json\"));\n        this.setState({ example: data[0], examples: data });\n      });\n  }\n\n  loadFile() {\n    const reader = new FileReader();\n    reader.onloadend = async (e) => {\n      const text = e.target.result;\n      try {\n        const sheet = this.parseSheet(text);\n        this.props.onChangeFile(sheet);\n        console.log(\"Loaded sheet:\", sheet);\n        if (this.fileInput.type === \"file\") this.fileInput.value = \"\";\n        this.setState({ file: null });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    reader.readAsText(this.state.file, \"utf-8\");\n  }\n\n  onLoadFile() {\n    if (this.state.mode === \"file\") {\n      this.loadFile();\n    } else if (this.state.mode === \"example\") {\n      this.loadExample();\n    }\n  }\n\n  onModeChange(e) {\n    this.setMode(e.target.value);\n  }\n\n  setMode(mode) {\n    if (mode === \"example\" && !this.example) {\n      this.loadExamples();\n    }\n    this.setState({ mode: mode });\n  }\n\n  parseSheet(text) {\n    const lines = text.split(\"\\n\");\n    const sheet = { notes: [] };\n    for (let line of lines) {\n      line = line.trim();\n      if (line === \"\" || line.startsWith(\"#\")) {\n        continue;\n      }\n      if (!sheet.bpm) {\n        // eslint-disable-next-line\n        const [bpm, offset, ...other] = line.split(/\\s+/);\n        sheet.bpm = parseFloat(bpm);\n        sheet.offset = parseFloat(offset);\n        continue;\n      }\n      const [first, ...more] = line.split(/\\s*;\\s*/);\n      const [pitch, octave, tempoM] = first.split(/\\s+/);\n      const level = parseInt(pitch) + parseInt(octave) * 12 + 12;\n      const aux = more.map((s) => {\n        const [pitch, octave, tempoA, off] = s.split(/\\s+/);\n        const level = parseInt(pitch) + parseInt(octave) * 12 + 12;\n        const offset = off ? parseFloat(off) : undefined;\n        return { level: level, tempo: parseFloat(tempoA || tempoM), offset: offset };\n      });\n      sheet.notes.push({ level: level, tempo: parseFloat(tempoM), aux: aux });\n    }\n    sheet.length = sheet.notes.reduce((sum, note) => sum + note.tempo, 0);\n    console.log(sheet.length);\n    return sheet;\n  }\n\n  render() {\n    let inputElement = null,\n      loadIcon = null,\n      loadEnabled = true;\n    if (this.state.mode === \"file\") {\n      loadIcon = \"folder-open\";\n      inputElement = (\n        <input\n          ref={(ref) => (this.fileInput = ref)}\n          type=\"file\"\n          className=\"form-control\"\n          name=\"file\"\n          onChange={(e) => this.setState({ file: e.target.files[0] })}\n        />\n      );\n      loadEnabled = !!this.state.file;\n    } else if (this.state.mode === \"example\") {\n      loadIcon = \"download\";\n      const options = this.state.examples.map((name) => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ));\n      inputElement = (\n        <select\n          ref={(ref) => (this.fileInput = ref)}\n          className=\"form-select\"\n          aria-label=\"Select an example\"\n          onChange={(e) => this.setState({ example: e.target.value })}\n        >\n          {options}\n        </select>\n      );\n      loadEnabled = options.length > 1;\n    }\n    return (\n      <div className=\"LoadFile container mb-3\">\n        <div className=\"row justify-content-between align-items-baseline\">\n          <span className=\"col-12 col-md-auto\" onChange={(e) => this.onModeChange(e)}>\n            <span className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"loadSource\"\n                id=\"loadSourceFile\"\n                value=\"file\"\n                defaultChecked\n              />\n              <label className=\"form-check-label\" htmlFor=\"loadSourceFile\">\n                Local File\n              </label>\n            </span>\n            <span className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"loadSource\"\n                id=\"loadSourceExample\"\n                value=\"example\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"loadSourceExample\">\n                Examples\n              </label>\n            </span>\n          </span>\n          <span className=\"col col-12 col-md-auto flex-grow-1 my-3 my-md-0\">{inputElement}</span>\n          <span className=\"col-12 col-md-auto\">\n            <button className=\"btn btn-primary\" disabled={!loadEnabled} onClick={() => this.onLoadFile()}>\n              <i className={\"fas fa-fw fa-\" + loadIcon}></i> Load\n            </button>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    const defaultSheet = { bpm: 120, offset: 0, notes: [] };\n    this.state = {\n      gain: 0.3,\n      noteIndex: -1,\n      sheet: this.props.sheet || defaultSheet,\n      waveType: \"sine\",\n    };\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.auxOscillators = [];\n    this.gainNode = this.audioContext.createGain();\n    this.setGain(this.state.gain);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sheet !== this.props.sheet) {\n      this.setState({ noteIndex: -1, sheet: this.props.sheet });\n      this.stop();\n    }\n  }\n\n  playMelody() {\n    if (this.oscillator) {\n      this.stop();\n    }\n\n    if (!this.props.sheet) {\n      return;\n    }\n\n    this.setState({ noteIndex: -1 });\n    this.playNextNote();\n  }\n\n  playNextNote() {\n    const noteIndex = this.state.noteIndex + 1;\n    const sheet = this.state.sheet;\n    if (noteIndex >= sheet.notes.length) {\n      this.stop();\n      return;\n    }\n    this.setState({ noteIndex: noteIndex });\n    const note = sheet.notes[noteIndex];\n    const aux = note.aux.map((n) => [this.toFrequency(n.level), this.toDuration(n.tempo), this.toDuration(n.offset)]);\n    this.playNote(this.toFrequency(note.level), this.toDuration(note.tempo), () => this.playNextNote(), aux || []);\n  }\n\n  playNote(frequency, duration, callback, aux) {\n    const audioCtx = this.audioContext;\n    const oscillator = audioCtx.createOscillator();\n    this.oscillator = oscillator;\n\n    oscillator.type = this.state.waveType;\n    oscillator.frequency.value = frequency;\n    oscillator.connect(this.gainNode).connect(audioCtx.destination);\n    oscillator.onended = callback;\n    if (aux?.length) {\n      const auxOscillators = [];\n      aux.forEach(([frequency, duration, offset]) => {\n        const o = audioCtx.createOscillator();\n        o.type = this.state.waveType;\n        o.frequency.value = frequency;\n        o.connect(this.gainNode).connect(audioCtx.destination);\n        o.duration = duration;\n        o.offset = offset;\n        auxOscillators.push(o);\n      });\n      auxOscillators.forEach((o) => {\n        if (o.offset) {\n          o.start(audioCtx.currentTime + o.offset);\n          o.stop(audioCtx.currentTime + o.offset + o.duration);\n        } else {\n          o.start();\n          o.stop(audioCtx.currentTime + o.duration);\n        }\n      });\n    }\n    oscillator.start();\n    oscillator.stop(audioCtx.currentTime + duration);\n  }\n\n  setGain(gain) {\n    this.setState({ gain: gain });\n    this.gainNode.gain.value = gain;\n  }\n\n  setProgress(progress) {\n    this.setState({ noteIndex: progress - 1 });\n    if (this.oscillator) {\n      this.oscillator.stop();\n    }\n  }\n\n  setWaveType(waveType) {\n    this.setState({ waveType: waveType });\n    if (this.oscillator) {\n      this.oscillator.type = waveType;\n    }\n  }\n\n  stop() {\n    if (!this.oscillator) {\n      return;\n    }\n    this.oscillator.onended = null;\n    this.oscillator.stop();\n    this.oscillator = null;\n    this.setState({ noteIndex: -1 });\n  }\n\n  toFrequency(level) {\n    if (level === 0) {\n      return 0;\n    }\n    level += this.state.sheet.offset;\n    const referenceFrequency = 440; // A4\n    const referenceNote = 69; // A4 = 9 + (4 + 1) * 12\n    const relativeLevel = level - referenceNote;\n    const frequency = Math.pow(2, relativeLevel / 12) * referenceFrequency;\n    return frequency;\n  }\n\n  toDuration(tempo) {\n    if (!tempo) return 0;\n    return (tempo * 60) / (this.state.sheet.bpm * 16);\n  }\n\n  render() {\n    return (\n      <div className=\"Player container\">\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <input\n              type=\"range\"\n              className=\"form-range\"\n              name=\"progressBar\"\n              value={1 + this.state.noteIndex}\n              onChange={(e) => this.setProgress(e.target.value)}\n              min={0}\n              max={this.state.sheet.notes.length}\n              step={1}\n            />\n          </div>\n          <div className=\"col-auto\">\n            <label htmlFor=\"progressBar\" className=\"form-label\">\n              {\"Notes: \" + (this.state.noteIndex + 1) + \" / \" + this.state.sheet.notes.length}\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-auto\">\n            <label className=\"form-label d-block\">Control</label>\n            <button className=\"btn btn-primary\" onClick={() => this.playMelody()}>\n              <i className=\"fas fa-play\"></i> Play\n            </button>\n            <button className=\"btn btn-danger ms-2\" onClick={() => this.stop()}>\n              <i className=\"fas fa-stop\"></i> Stop\n            </button>\n          </div>\n          <div className=\"col-auto\">\n            <label htmlFor=\"waveType\" className=\"form-label\">\n              Type\n            </label>\n            <select className=\"form-select\" onChange={(e) => this.setWaveType(e.target.value)} defaultValue=\"sine\">\n              <option value=\"sine\">Sine (Default)</option>\n              <option value=\"square\">Square</option>\n              <option value=\"sawtooth\">Sawtooth</option>\n              <option value=\"triangle\">Triangle</option>\n            </select>\n          </div>\n          <div className=\"col-12 col-md-auto flex-grow-1\">\n            <label htmlFor=\"volume\" className=\"form-label\">\n              {\"Volume: \" + parseFloat(this.state.gain).toFixed(2)}\n            </label>\n            <input\n              type=\"range\"\n              className=\"form-range\"\n              name=\"volume\"\n              onChange={(e) => {\n                this.setGain(e.target.value);\n              }}\n              value={this.state.gain}\n              min={0}\n              max={1}\n              step={0.01}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport \"./App.scss\";\nimport OpenFile from \"./components/OpenFile\";\nimport Player from \"./components/Player\";\n\nexport default class App extends Component {\n  state = {\n    sheet: { notes: [] },\n  };\n\n  onChangeFile(sheet) {\n    this.setState({ sheet: sheet });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <main className=\"card mb-3\">\n          <div className=\"card-body px-2\">\n            <OpenFile onChangeFile={this.onChangeFile.bind(this)} />\n            <div className=\"container\">\n              <hr />\n            </div>\n            <Player sheet={this.state.sheet} />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}