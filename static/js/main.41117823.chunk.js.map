{"version":3,"sources":["components/OpenFile.js","components/Player.js","App.js","reportWebVitals.js","index.js"],"names":["LoadFile","reader","FileReader","onloadend","e","a","text","target","result","sheet","parseSheet","props","onChangeFile","console","log","err","error","readAsText","this","state","file","lines","split","notes","line","trim","startsWith","bpm","pitch","octave","tempo","level","parseInt","push","parseFloat","offset","length","reduce","sum","note","className","type","name","onChange","setState","files","onClick","loadFile","Component","Player","gain","noteIndex","waveType","audioContext","window","AudioContext","webkitAudioContext","gainNode","createGain","setGain","oscillator","stop","playNextNote","playNote","toFrequency","toDuration","frequency","duration","callback","audioCtx","createOscillator","value","connect","destination","onended","start","currentTime","relativeLevel","Math","pow","readOnly","min","max","step","htmlFor","playMelody","toFixed","setWaveType","defaultValue","App","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41117823.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nexport default class LoadFile extends Component {\n  loadFile() {\n    const reader = new FileReader();\n    reader.onloadend = async (e) => {\n      const text = e.target.result;\n      try {\n        const sheet = this.parseSheet(text);\n        this.props.onChangeFile(sheet);\n        console.log(\"Loaded sheet:\", sheet);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    reader.readAsText(this.state.file, \"utf-8\");\n  }\n\n  parseSheet(text) {\n    const lines = text.split(\"\\n\");\n    const sheet = { notes: [] };\n    for (let line of lines) {\n      line = line.trim();\n      if (line === \"\" || line.startsWith(\"#\")) {\n        continue;\n      }\n      if (!sheet.bpm) {\n        // eslint-disable-next-line\n        const [bpm, offset, ...other] = line.split(/\\s+/);\n        sheet.bpm = parseFloat(bpm);\n        sheet.offset = parseFloat(offset);\n        continue;\n      }\n      const [pitch, octave, tempo] = line.split(/\\s+/);\n      const level = parseInt(pitch) + parseInt(octave) * 12 + 12;\n      sheet.notes.push({ level: level, tempo: parseFloat(tempo) });\n    }\n    sheet.length = sheet.notes.reduce((sum, note) => sum + note.tempo, 0);\n    console.log(sheet.length);\n    return sheet;\n  }\n\n  render() {\n    return (\n      <div className=\"LoadFile\">\n        <div className=\"mb-3 d-flex\">\n          <span className=\"flex-grow-1\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              name=\"file\"\n              onChange={(e) => this.setState({ file: e.target.files[0] })}\n            />\n          </span>\n          <button className=\"btn btn-primary ms-2\" onClick={() => this.loadFile()}>\n            <i className=\"fas fa-folder-open\"></i> Load\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gain: 0.5,\n      noteIndex: -1,\n      waveType: \"sine\",\n    };\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.gainNode = this.audioContext.createGain();\n    const defaultSheet = { notes: [] };\n    this.sheet = this.props.sheet || defaultSheet;\n    this.setGain(this.state.gain);\n  }\n\n  componentDidUpdate() {\n    this.sheet = this.props.sheet;\n  }\n\n  playMelody() {\n    if (this.oscillator) {\n      this.stop();\n    }\n\n    if (!this.props.sheet) {\n      return;\n    }\n\n    this.setState({ noteIndex: -1 });\n    this.playNextNote();\n  }\n\n  playNextNote() {\n    const noteIndex = this.state.noteIndex + 1;\n    this.setState({ noteIndex: noteIndex });\n    if (noteIndex >= this.sheet.notes.length) {\n      this.stop();\n    } else {\n      const note = this.sheet.notes[noteIndex];\n      this.playNote(this.toFrequency(note.level + this.sheet.offset), this.toDuration(note.tempo, this.sheet.bpm), () =>\n        this.playNextNote()\n      );\n    }\n  }\n\n  playNote(frequency, duration, callback) {\n    const audioCtx = this.audioContext;\n    const oscillator = audioCtx.createOscillator();\n    this.oscillator = oscillator;\n\n    oscillator.type = this.state.waveType;\n    oscillator.frequency.value = frequency;\n    oscillator.connect(this.gainNode).connect(audioCtx.destination);\n    oscillator.onended = callback;\n    oscillator.start();\n    oscillator.stop(audioCtx.currentTime + duration);\n  }\n\n  setGain(gain) {\n    this.setState({ gain: gain });\n    this.gainNode.gain.value = gain;\n  }\n\n  setWaveType(waveType) {\n    this.setState({ waveType: waveType });\n    if (this.oscillator) {\n      this.oscillator.type = waveType;\n    }\n  }\n\n  stop() {\n    if (!this.oscillator) {\n      return;\n    }\n    this.oscillator.onended = null;\n    this.oscillator.stop();\n    this.oscillator = null;\n    this.setState({ noteIndex: -1 });\n  }\n\n  toFrequency(level) {\n    if (level === 0) {\n      return 0;\n    }\n    const referenceFrequency = 440; // A4\n    const referenceNote = 69; // A4 = 9 + (4 + 1) * 12\n    const relativeLevel = level - referenceNote;\n    const frequency = Math.pow(2, relativeLevel / 12) * referenceFrequency;\n    return frequency;\n  }\n\n  toDuration(tempo, bpm) {\n    return (tempo * 60) / (bpm * 16);\n  }\n\n  render() {\n    return (\n      <div className=\"Player container\">\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <input\n              type=\"range\"\n              className=\"form-range\"\n              name=\"progressBar\"\n              readOnly=\"readonly\"\n              value={1 + this.state.noteIndex}\n              min=\"0\"\n              max={this.sheet.notes.length}\n              step={1}\n            />\n          </div>\n          <div className=\"col-auto\">\n            <label htmlFor=\"progressBar\" className=\"form-label\">\n              {\"Notes: \" + (this.state.noteIndex + 1) + \" / \" + this.sheet.notes.length}\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-auto\">\n            <label className=\"form-label d-block\">Control</label>\n            <button className=\"btn btn-primary\" onClick={() => this.playMelody()}>\n              <i className=\"fas fa-play\"></i> Play\n            </button>\n            <button className=\"btn btn-danger ms-2\" onClick={() => this.stop()}>\n              <i className=\"fas fa-stop\"></i> Stop\n            </button>\n          </div>\n          <div className=\"col\">\n            <label htmlFor=\"volume\" className=\"form-label\">\n              {\"Volume: \" + parseFloat(this.state.gain).toFixed(2)}\n            </label>\n            <input\n              type=\"range\"\n              className=\"form-range\"\n              name=\"volume\"\n              onChange={(e) => {\n                this.setGain(e.target.value);\n              }}\n              value={this.state.gain}\n              min={0}\n              max={1}\n              step={0.01}\n            />\n          </div>\n          <div className=\"col-auto\">\n            <label htmlFor=\"waveType\" className=\"form-label\">\n              Type\n            </label>\n            <select className=\"form-select\" onChange={(e) => this.setWaveType(e.target.value)} defaultValue=\"sine\">\n              <option value=\"sine\">Sine (Default)</option>\n              <option value=\"square\">Square</option>\n              <option value=\"sawtooth\">Sawtooth</option>\n              <option value=\"triangle\">Triangle</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport \"./App.scss\";\nimport OpenFile from \"./components/OpenFile\";\nimport Player from \"./components/Player\";\n\nexport default class App extends Component {\n  state = {\n    sheet: null,\n  };\n\n  onChangeFile(sheet) {\n    this.setState({ sheet: sheet });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <main className=\"card mb-3\">\n          <div className=\"card-body\">\n            <OpenFile onChangeFile={this.onChangeFile.bind(this)} />\n            <Player sheet={this.state.sheet} />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}