{"version":3,"sources":["components/OpenFile.js","components/Player.js","App.js","reportWebVitals.js","index.js"],"names":["LoadFile","reader","FileReader","onloadend","e","a","text","target","result","sheet","parseSheet","props","onChangeFile","console","log","err","error","readAsText","this","state","file","lines","split","notes","line","trim","startsWith","bpm","first","more","pitch","octave","tempo","level","parseInt","aux","map","s","off","offset","parseFloat","undefined","push","length","reduce","sum","note","className","type","name","onChange","setState","files","onClick","loadFile","Component","Player","gain","noteIndex","waveType","audioContext","window","AudioContext","webkitAudioContext","auxOscillators","gainNode","createGain","setGain","prevProps","oscillator","stop","playNextNote","n","toFrequency","toDuration","playNote","frequency","duration","callback","audioCtx","createOscillator","value","connect","destination","onended","forEach","o","start","currentTime","progress","relativeLevel","Math","pow","setProgress","min","max","step","htmlFor","playMelody","toFixed","setWaveType","defaultValue","App","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c9f3b89.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nexport default class LoadFile extends Component {\n  loadFile() {\n    const reader = new FileReader();\n    reader.onloadend = async (e) => {\n      const text = e.target.result;\n      try {\n        const sheet = this.parseSheet(text);\n        this.props.onChangeFile(sheet);\n        console.log(\"Loaded sheet:\", sheet);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    reader.readAsText(this.state.file, \"utf-8\");\n  }\n\n  parseSheet(text) {\n    const lines = text.split(\"\\n\");\n    const sheet = { notes: [] };\n    for (let line of lines) {\n      line = line.trim();\n      if (line === \"\" || line.startsWith(\"#\")) {\n        continue;\n      }\n      if (!sheet.bpm) {\n        // eslint-disable-next-line\n        const [bpm, offset, ...other] = line.split(/\\s+/);\n        sheet.bpm = parseFloat(bpm);\n        sheet.offset = parseFloat(offset);\n        continue;\n      }\n      const [first, ...more] = line.split(/\\s+;\\s+/);\n      const [pitch, octave, tempo] = first.split(/\\s+/);\n      const level = parseInt(pitch) + parseInt(octave) * 12 + 12;\n      const aux = more.map((s) => {\n        const [pitch, octave, tempo, off] = s.split(/\\s+/);\n        const level = parseInt(pitch) + parseInt(octave) * 12 + 12;\n        const offset = off ? parseFloat(off) : undefined;\n        return { level: level, tempo: parseFloat(tempo), offset: offset };\n      });\n      sheet.notes.push({ level: level, tempo: parseFloat(tempo), aux: aux });\n    }\n    sheet.length = sheet.notes.reduce((sum, note) => sum + note.tempo, 0);\n    console.log(sheet.length);\n    return sheet;\n  }\n\n  render() {\n    return (\n      <div className=\"LoadFile\">\n        <div className=\"mb-3 d-flex\">\n          <span className=\"flex-grow-1\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              name=\"file\"\n              onChange={(e) => this.setState({ file: e.target.files[0] })}\n            />\n          </span>\n          <button className=\"btn btn-primary ms-2\" onClick={() => this.loadFile()}>\n            <i className=\"fas fa-folder-open\"></i> Load\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    const defaultSheet = { bpm: 120, offset: 0, notes: [] };\n    this.state = {\n      gain: 0.3,\n      noteIndex: -1,\n      sheet: this.props.sheet || defaultSheet,\n      waveType: \"sine\",\n    };\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.auxOscillators = [];\n    this.gainNode = this.audioContext.createGain();\n    this.setGain(this.state.gain);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sheet !== this.props.sheet) {\n      this.setState({ sheet: this.props.sheet });\n    }\n  }\n\n  playMelody() {\n    if (this.oscillator) {\n      this.stop();\n    }\n\n    if (!this.props.sheet) {\n      return;\n    }\n\n    this.setState({ noteIndex: -1 });\n    this.playNextNote();\n  }\n\n  playNextNote() {\n    const noteIndex = this.state.noteIndex + 1;\n    const sheet = this.state.sheet;\n    this.setState({ noteIndex: noteIndex });\n    if (noteIndex >= sheet.notes.length) {\n      this.stop();\n    } else {\n      const note = sheet.notes[noteIndex];\n      const aux = note.aux.map((n) => [this.toFrequency(n.level), this.toDuration(n.tempo), this.toDuration(n.offset)]);\n      this.playNote(this.toFrequency(note.level), this.toDuration(note.tempo), () => this.playNextNote(), aux || []);\n    }\n  }\n\n  playNote(frequency, duration, callback, aux) {\n    const audioCtx = this.audioContext;\n    const oscillator = audioCtx.createOscillator();\n    this.oscillator = oscillator;\n\n    oscillator.type = this.state.waveType;\n    oscillator.frequency.value = frequency;\n    oscillator.connect(this.gainNode).connect(audioCtx.destination);\n    oscillator.onended = callback;\n    if (aux?.length) {\n      const auxOscillators = [];\n      aux.forEach(([frequency, duration, offset]) => {\n        const o = audioCtx.createOscillator();\n        o.type = this.state.waveType;\n        o.frequency.value = frequency;\n        o.connect(this.gainNode).connect(audioCtx.destination);\n        o.duration = duration;\n        o.offset = offset;\n        auxOscillators.push(o);\n      });\n      auxOscillators.forEach((o) => {\n        if (o.offset) {\n          o.start(audioCtx.currentTime + o.offset);\n          o.stop(audioCtx.currentTime + o.offset + o.duration);\n        } else {\n          o.start();\n          o.stop(audioCtx.currentTime + o.duration);\n        }\n      });\n    }\n    oscillator.start();\n    oscillator.stop(audioCtx.currentTime + duration);\n  }\n\n  setGain(gain) {\n    this.setState({ gain: gain });\n    this.gainNode.gain.value = gain;\n  }\n\n  setProgress(progress) {\n    this.setState({ noteIndex: progress - 1 });\n    if (this.oscillator) {\n      this.oscillator.stop();\n    }\n  }\n\n  setWaveType(waveType) {\n    this.setState({ waveType: waveType });\n    if (this.oscillator) {\n      this.oscillator.type = waveType;\n    }\n  }\n\n  stop() {\n    if (!this.oscillator) {\n      return;\n    }\n    this.oscillator.onended = null;\n    this.oscillator.stop();\n    this.oscillator = null;\n    this.setState({ noteIndex: -1 });\n  }\n\n  toFrequency(level) {\n    if (level === 0) {\n      return 0;\n    }\n    level += this.state.sheet.offset;\n    const referenceFrequency = 440; // A4\n    const referenceNote = 69; // A4 = 9 + (4 + 1) * 12\n    const relativeLevel = level - referenceNote;\n    const frequency = Math.pow(2, relativeLevel / 12) * referenceFrequency;\n    return frequency;\n  }\n\n  toDuration(tempo) {\n    if (!tempo) return 0;\n    return (tempo * 60) / (this.state.sheet.bpm * 16);\n  }\n\n  render() {\n    return (\n      <div className=\"Player container\">\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <input\n              type=\"range\"\n              className=\"form-range\"\n              name=\"progressBar\"\n              value={1 + this.state.noteIndex}\n              onChange={(e) => this.setProgress(e.target.value)}\n              min={0}\n              max={this.state.sheet.notes.length}\n              step={1}\n            />\n          </div>\n          <div className=\"col-auto\">\n            <label htmlFor=\"progressBar\" className=\"form-label\">\n              {\"Notes: \" + (this.state.noteIndex + 1) + \" / \" + this.state.sheet.notes.length}\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-auto\">\n            <label className=\"form-label d-block\">Control</label>\n            <button className=\"btn btn-primary\" onClick={() => this.playMelody()}>\n              <i className=\"fas fa-play\"></i> Play\n            </button>\n            <button className=\"btn btn-danger ms-2\" onClick={() => this.stop()}>\n              <i className=\"fas fa-stop\"></i> Stop\n            </button>\n          </div>\n          <div className=\"col\">\n            <label htmlFor=\"volume\" className=\"form-label\">\n              {\"Volume: \" + parseFloat(this.state.gain).toFixed(2)}\n            </label>\n            <input\n              type=\"range\"\n              className=\"form-range\"\n              name=\"volume\"\n              onChange={(e) => {\n                this.setGain(e.target.value);\n              }}\n              value={this.state.gain}\n              min={0}\n              max={1}\n              step={0.01}\n            />\n          </div>\n          <div className=\"col-auto\">\n            <label htmlFor=\"waveType\" className=\"form-label\">\n              Type\n            </label>\n            <select className=\"form-select\" onChange={(e) => this.setWaveType(e.target.value)} defaultValue=\"sine\">\n              <option value=\"sine\">Sine (Default)</option>\n              <option value=\"square\">Square</option>\n              <option value=\"sawtooth\">Sawtooth</option>\n              <option value=\"triangle\">Triangle</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport \"./App.scss\";\nimport OpenFile from \"./components/OpenFile\";\nimport Player from \"./components/Player\";\n\nexport default class App extends Component {\n  state = {\n    sheet: { notes: [] },\n  };\n\n  onChangeFile(sheet) {\n    this.setState({ sheet: sheet });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <main className=\"card mb-3\">\n          <div className=\"card-body\">\n            <OpenFile onChangeFile={this.onChangeFile.bind(this)} />\n            <Player sheet={this.state.sheet} />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}